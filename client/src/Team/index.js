// ui.js - CORRECTION de createTeamModuleUnified() pour Singleton

async createTeamModuleUnified() {
  console.log('‚öîÔ∏è [PokemonUI] Cr√©ation module Team unifi√© (singleton-aware)...');
  
  try {
    // ‚úÖ V√âRIFIER SINGLETON AVANT D'IMPORTER
    const { TeamModule, createTeamModule } = await import('./Team/index.js');
    
    let teamModule = TeamModule.getInstance();
    
    if (teamModule && teamModule.uiManagerState.initialized) {
      console.log('‚ôªÔ∏è [PokemonUI] Singleton Team trouv√©, pr√©paration UIManager...');
      
      // ‚úÖ FERMER L'UI QUI POURRAIT √äTRE OUVERTE
      teamModule.forceCloseUI();
      
      // ‚úÖ ASSURER QUE L'IC√îNE EST DISPONIBLE POUR UIMANAGER
      const iconReady = teamModule.ensureIconForUIManager();
      
      if (!iconReady) {
        console.warn('‚ö†Ô∏è [PokemonUI] Ic√¥ne non disponible, recr√©ation...');
        TeamModule.reset(); // Reset singleton
        teamModule = null; // Force recr√©ation
      } else {
        // ‚úÖ CONNECTER √Ä UIMANAGER
        if (this.uiManager && this.uiManager.registerIconPosition) {
          console.log('üìç [PokemonUI] Connexion Team singleton √† UIManager...');
          teamModule.connectUIManager(this.uiManager);
        }
        
        // Exposer globalement
        window.teamSystem = teamModule;
        window.teamSystemGlobal = teamModule;
        window.toggleTeam = () => teamModule.toggleTeamUI();
        window.openTeam = () => teamModule.openTeam();
        window.closeTeam = () => teamModule.closeTeam();
        window.forceCloseTeam = () => teamModule.forceCloseUI();
        
        console.log('‚úÖ [PokemonUI] Team singleton connect√© √† UIManager');
        return teamModule;
      }
    }
    
    // ‚úÖ CR√âER NOUVEAU MODULE SI SINGLETON INEXISTANT OU CASS√â
    if (!teamModule) {
      console.log('üÜï [PokemonUI] Cr√©ation nouveau module Team...');
      
      // Cr√©er le module avec les param√®tres du jeu
      teamModule = await createTeamModule(
        window.currentGameRoom,
        window.game?.scene?.getScenes(true)[0]
      );
      
      // ‚úÖ CONNECTER √Ä UIMANAGER IMM√âDIATEMENT
      if (this.uiManager && this.uiManager.registerIconPosition) {
        console.log('üìç [PokemonUI] Connexion nouveau Team √† UIManager...');
        teamModule.connectUIManager(this.uiManager);
      } else {
        console.warn('‚ö†Ô∏è [PokemonUI] Fallback position manuelle');
        setTimeout(() => {
          const teamIcon = document.querySelector('#team-icon');
          if (teamIcon) {
            teamIcon.style.position = 'fixed';
            teamIcon.style.right = '20px';
            teamIcon.style.bottom = '20px';
            teamIcon.style.zIndex = '500';
          }
        }, 100);
      }
      
      // Exposer globalement pour compatibilit√©
      window.teamSystem = teamModule;
      window.teamSystemGlobal = teamModule;
      window.toggleTeam = () => teamModule.toggleTeamUI();
      window.openTeam = () => teamModule.openTeam();
      window.closeTeam = () => teamModule.closeTeam();
      window.forceCloseTeam = () => teamModule.forceCloseUI();
      
      console.log('‚úÖ [PokemonUI] Nouveau module Team cr√©√© et connect√©');
    }
    
    return teamModule;
    
  } catch (error) {
    console.error('‚ùå [PokemonUI] Erreur cr√©ation Team unifi√©:', error);
    
    // Fallback vers module vide en cas d'erreur
    return this.createEmptyWrapper('team');
  }
}
